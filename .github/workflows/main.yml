name: Deploy FastAPI

on:
  push:
    branches:
      - main

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo yum update -y
          sudo yum install -y openssh-clients rsync

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          # SSH 키 설정
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 400 key.pem

          # EC2에 접속하여 디렉토리 생성 및 권한 변경
          ssh -o StrictHostKeyChecking=no -i key.pem -tt -o ServerAliveInterval=60 -o ServerAliveCountMax=5 $EC2_USER@$EC2_HOST << EOF
            sudo mkdir -p /home/***/app
            sudo chown $EC2_USER:$EC2_USER /home/***/app
          EOF

          # EC2로 파일 전송
          rsync -avz --delete --compress -e "ssh -o StrictHostKeyChecking=no -i key.pem" ./* $EC2_USER@$EC2_HOST:/home/***/app &

          # 파일 전송과 동시에 권한 변경
          ssh -o StrictHostKeyChecking=no -i key.pem -tt -o ServerAliveInterval=60 -o ServerAliveCountMax=5 $EC2_USER@$EC2_HOST << EOF &
            while [ ! -d /home/***/app ]; do sleep 1; done
            sudo chown -R $EC2_USER:$EC2_USER /home/***/app/*
          EOF

          # 모든 백그라운드 작업이 완료될 때까지 기다림
          wait

          # EC2에 접속하여 서비스 재시작
          ssh -o StrictHostKeyChecking=no -i key.pem -tt -o ServerAliveInterval=60 -o ServerAliveCountMax=5 $EC2_USER@$EC2_HOST << EOF
            sudo systemctl restart fastapi
          EOF
